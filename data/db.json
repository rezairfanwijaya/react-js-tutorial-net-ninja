{
  "blogs": [
    {
      "title": "How To Use Stripe in React.js",
      "body": "Building service-rendering web applications such as E-commerce sites and other Software as a Service (SaaS) web applications requires the inclusion of a payment method that will enable you to collect payment from users securely.\n\nOne of the best mediums for securely processing payments from users on web applications is the Stripe payment platform. In this article, I will show why it is ranked among the best payment platforms and how you can use it in your React.js application.\n\nWhat is Stripe\nStripe is a payment processing platform that serves as a third-party payment processor or a payment gateway platform. Therefore, Stripe is used by business owners to process customers’ debit cards and credit cards for payment of goods or services online.\n\nStripe is trusted and used by over 500 million global organizations, companies, and major brands, ranging from startup brands to fortune 500. Some of the most popular brands using the Stripe payment platform are Lyft, Amazon, and Shopify.\n\nOne of the reasons Stripe has gathered a lot of users since it was created is because of its ability to process 135 currencies over the world.\n\nAlso, Stripe is an easy-to-use tool that can be easily integrated because its online developers’ tool, JSON, is very impressive with easy guides and is public.\n\nStripe can be used in many transactions to transfer money from a customer account to a business owner’s bank account. For example, Stripe is used in online retail shops to securely capture a customer’s debit card or credit card details through a processor, which will collect transaction funds from a customer’s account to a temporal merchant account. Finally, these processed funds would be transferred to a business owner’s bank account.\n\nStripe is compatible with major backend programming languages such as Python, PHP, and Ruby and popular backend frameworks such as Node.js.\n\nYou need to get a REST API key to use Stripe in your application. These API keys can be accessed from your Dashboard when you open a Stripe account, and there are two types of API keys. One of these keys is a test key that can be used in a developer environment for testing, while the other is meant for use if you want your application to go live.\n\nThe production API key will be given to you when you link your bank account to your Stripe account and activate your account.\n\nIn the next sections, I will show you how you can connect your Stripe-powered server-side Node.js application to a frontend React.js application, but first, let’s create and set up our project.\n\nBefore that, head over to dashboard.stripe.com/register. To create your stripe account. You can activate it if you want a live API key, but for now, the test API key will be just fine\n\nCreate and Set Up Your Project\nThe first step you will take is to create a project folder. Inside this folder, you will create a React.js application that will be the front end of your project. So, run the command below at the same level as your project folder to create the React.js application:\n\nnpx create-react-app Stripe-payment\n\nThe command above will create a folder named Stripe-payment, with all the files and folders required to start and run a React.js application for you in your project folder.\n\nInside this React.js folder, you need to install some packages. these packages are important in connecting a React.js application to a Stripe API. So, run the command below to install these packages:",
      "author": "rezairfanwijaya",
      "preview": "A deep dive into how the Stripe payment platform works in React.js",
      "id": 1
    }
  ]
}